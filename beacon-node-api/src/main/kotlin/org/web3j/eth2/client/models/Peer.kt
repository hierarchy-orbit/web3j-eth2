/**
 * Eth2 Beacon Node API
 * API specification for the beacon node, which enables users to query and participate in Ethereum 2.0 phase 0 beacon chain.
 *
 * OpenAPI spec version: v0.12.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package org.web3j.eth2.client.models


/**
 *
 * @param peerId Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)
 * @param enr
 * @param address [Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)
 * @param state
 * @param direction
 */
data class Peer(

        /* Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/) */
        val peerId: kotlin.String? = null,
        val enr: AllOfPeerEnr? = null,
        /* [Read more](https://docs.libp2p.io/reference/glossary/#multiaddr) */
        val address: kotlin.String? = null,
        val state: Peer.State? = null,
        val direction: Peer.Direction? = null
) {
    /**
     *
     * Values: disconnected,connecting,connected,disconnecting
     */
    enum class State(val value: kotlin.String) {
        disconnected("disconnected"),
        connecting("connecting"),
        connected("connected"),
        disconnecting("disconnecting");
    }

    /**
     *
     * Values: inbound,outbound
     */
    enum class Direction(val value: kotlin.String) {
        inbound("inbound"),
        outbound("outbound");
    }
}