apply plugin: 'org.ajoberstar.git-publish'

description = 'Web3j Eth2 Beacon API Client.'

dependencies {
    api "jakarta.ws.rs:jakarta.ws.rs-api:$jaxrsVersion"

    implementation "org.glassfish.jersey.core:jersey-client:$jerseyVersion",
            "org.glassfish.jersey.ext:jersey-proxy-client:$jerseyVersion",
            "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion",
            "org.glassfish.jersey.media:jersey-media-sse:$jerseyVersion",
            "org.glassfish.jersey.inject:jersey-hk2:$jerseyVersion",
            "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion",
            "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion",
            "io.github.microutils:kotlin-logging:$kotlinLoggingVersion",
            "ch.qos.logback:logback-classic:$logbackVersion",
            "org.slf4j:jul-to-slf4j:$slf4jVersion"

    integrationTestImplementation "org.testcontainers:testcontainers:$testcontainersVersion",
            "org.testcontainers:junit-jupiter:$testcontainersVersion"
}

tasks.withType(Test) {
    useJUnitPlatform {
        includeTags 'teku'//, 'lighthouse'
    }
}

integrationTest.outputs.upToDateWhen { false }

ext {
    docsPath = 'web3j-eth2/web3j-eth2-docs'
    ghToken = System.getenv('GITHUB_PERSONAL_ACCESS_TOKEN')
}

gitPublish {
    if (ghToken) {
        repoUri = "https://github.com/${docsPath}.git"
    } else {
        repoUri = "git@github.com:${docsPath}.git"
    }

    // branch will be created if it doesn't exist
    branch = 'master'

    def coreDocs = files("${buildDir.path}/docs/javadoc/")

    contents {
        from(coreDocs) {
            into '/docs/javadoc-api'
        }
    }

    // what to keep in the existing branch (include=keep)
    preserve {
        include '/**'
    }
}
