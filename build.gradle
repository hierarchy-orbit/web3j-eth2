buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:2.1.1'
    }
}

plugins {
    id 'de.undercouch.download' version '4.1.1'
    id 'com.diffplug.gradle.spotless' version '3.25.0'
    id 'io.codearte.nexus-staging' version '0.22.0'
    id 'de.marcphilipp.nexus-publish' version '0.4.0'
}

subprojects {
    apply plugin: 'kotlin' 

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
        
        testImplementation "io.kotest:kotest-runner-junit5:$kotestVersion",
             "io.kotest:kotest-assertions-core:$kotestVersion",
             "io.kotest:kotest-property:$kotestVersion"
    }
    
    apply {
        [
                'bintray',
                'publish',
                'jacoco',
                'java',
                'javadoc',
                'repositories',
                'spotless'
        ].each { buildScript ->
            download {
                src "https://raw.githubusercontent.com/web3j/build-tools/master/gradle/$buildScript/build.gradle"
                dest "$rootDir/gradle/$buildScript/build.gradle"
                overwrite true
                quiet true
                onlyIfModified true
            }
            from("$rootDir/gradle/$buildScript/build.gradle")
        }
    }

    publishing {
        publications {
            maven(MavenPublication) {
                pom {
                    scm {
                        url = "https://github.com/web3j/web3j-eth2"
                        connection = "scm:https://github.com/web3j/web3j-eth2.git"
                        developerConnection = "scm:git://github.com/web3j/web3j-eth2.git"
                    }
                }
            }
        }
    }

    tasks.withType(Test) {
        reports.html.destination = file("${reporting.baseDir}/${name}")
        useJUnitPlatform()
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    sourceCompatibility = 1.8
}
